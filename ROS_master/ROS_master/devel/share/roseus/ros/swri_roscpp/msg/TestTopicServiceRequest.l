;; Auto-generated. Do not edit!


(when (boundp 'swri_roscpp::TestTopicServiceRequest)
  (if (not (find-package "SWRI_ROSCPP"))
    (make-package "SWRI_ROSCPP"))
  (shadow 'TestTopicServiceRequest (find-package "SWRI_ROSCPP")))
(unless (find-package "SWRI_ROSCPP::TESTTOPICSERVICEREQUEST")
  (make-package "SWRI_ROSCPP::TESTTOPICSERVICEREQUEST"))

(in-package "ROS")
;;//! \htmlinclude TestTopicServiceRequest.msg.html
(if (not (find-package "MARTI_COMMON_MSGS"))
  (ros::roseus-add-msgs "marti_common_msgs"))


(defclass swri_roscpp::TestTopicServiceRequest
  :super ros::object
  :slots (_srv_header _request_value ))

(defmethod swri_roscpp::TestTopicServiceRequest
  (:init
   (&key
    ((:srv_header __srv_header) (instance marti_common_msgs::ServiceHeader :init))
    ((:request_value __request_value) 0)
    )
   (send-super :init)
   (setq _srv_header __srv_header)
   (setq _request_value (round __request_value))
   self)
  (:srv_header
   (&rest __srv_header)
   (if (keywordp (car __srv_header))
       (send* _srv_header __srv_header)
     (progn
       (if __srv_header (setq _srv_header (car __srv_header)))
       _srv_header)))
  (:request_value
   (&optional __request_value)
   (if __request_value (setq _request_value __request_value)) _request_value)
  (:serialization-length
   ()
   (+
    ;; marti_common_msgs/ServiceHeader _srv_header
    (send _srv_header :serialization-length)
    ;; int32 _request_value
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; marti_common_msgs/ServiceHeader _srv_header
       (send _srv_header :serialize s)
     ;; int32 _request_value
       (write-long _request_value s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; marti_common_msgs/ServiceHeader _srv_header
     (send _srv_header :deserialize buf ptr-) (incf ptr- (send _srv_header :serialization-length))
   ;; int32 _request_value
     (setq _request_value (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get swri_roscpp::TestTopicServiceRequest :md5sum-) "62086d0669b9627ef32b14cac1955c4c")
(setf (get swri_roscpp::TestTopicServiceRequest :datatype-) "swri_roscpp/TestTopicServiceRequest")
(setf (get swri_roscpp::TestTopicServiceRequest :definition-)
      "# Test message used only for swri_roscpp unit tests
# Messages for TopicServices would normally be generated by the add_topic_service_files CMake macro
marti_common_msgs/ServiceHeader srv_header
int32 request_value

================================================================================
MSG: marti_common_msgs/ServiceHeader
# This message contains all of the data filled in automatically by the service system
# It is required in each request and response message to be named srv_header
time stamp
uint32 sequence
string sender
bool result # Used to indicate if the service request was successful or not

")



(provide :swri_roscpp/TestTopicServiceRequest "62086d0669b9627ef32b14cac1955c4c")


